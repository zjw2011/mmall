<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <description>Spring Configuration</description>

    <context:property-placeholder ignore-unresolvable="true" location="classpath:order.properties" />

    <context:component-scan base-package="com.arunqi.mmall" />

    <bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource"
          destroy-method="close">

        <property name="poolName" value="eduDataDourcePool" />

        <property name="driverClassName" value="${jdbc.driverClassName}" />
        <property name="jdbcUrl" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
        <property name="readOnly" value="false" />

        <!-- 配置初始化大小、最小、最大 -->
        <property name="minimumIdle" value="${jdbc.pool.minIdle}" />
        <property name="maximumPoolSize" value="${jdbc.pool.maxActive}" />

        <!-- 配置获取连接等待超时的时间 毫秒 -->
        <property name="connectionTimeout" value="10000" />
        <property name="idleTimeout" value="120000" />
        <property name="maxLifetime" value="240000" />

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="validationTimeout" value="10000" />
        <property name="connectionTestQuery" value="${jdbc.testSql}" />
        <!--<property name="connectionInitSql" value="${jdbc.testSql}" />-->

        <property name="dataSourceProperties">
            <props>
                <prop key="cachePrepStmts">true</prop>
                <prop key="prepStmtCacheSize">250</prop>
                <prop key="prepStmtCacheSqlLimit">2048</prop>
            </props>
        </property>
    </bean>

    <!-- 定义事务 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!-- 配置 Annotation 驱动，扫描@Transactional注解的类定义事务  -->
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>

    <!-- 自定义的数据库处理类 -->
    <!--<bean id="baseJdbcDao" class="com.arunqi.mmall.server.base.dao.BaseJdbcDao">-->
        <!--<constructor-arg index="0" ref="dataSource" />-->
    <!--</bean>-->

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <constructor-arg index="0" ref="dataSource" />
    </bean>

    <import resource="classpath:dubbo.xml" />
</beans>